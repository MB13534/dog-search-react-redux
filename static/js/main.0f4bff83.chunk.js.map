{"version":3,"sources":["API/dogs.js","API/keys.js","constants.js","actions.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reducers.js","index.js"],"names":["axios","create","baseURL","headers","CHANGE_SEARCHFIELD","REQUEST_DOGS_PENDING","REQUEST_DOGS_SUCCESS","REQUEST_DOGS_FAILED","filterOriginalDogList","dogList","filter","dog","breeds","breed_group","Card","id","imgUrl","breed","group","temperament","className","style","backgroundColor","src","alt","CardList","data","map","url","name","SearchBox","onSearchChange","placeholder","type","onChange","Scroll","children","overflowY","border","height","marginTop","ErrorBoundary","props","state","hasError","error","info","this","setState","Component","App","filterSearch","searchField","toLowerCase","includes","onRequestDogs","isPending","filteredSearch","connect","requestDogs","searchDogs","dispatch","e","text","target","value","payload","numberOfDogsToFetch","a","dogs","get","response","filteredDogList","initialStateSearch","initialStateDogs","rootReducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f4bff83.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nimport { API_KEY } from \"./keys\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.thedogapi.com/v1/images\",\r\n  headers: {\r\n    \"x-api-key\": API_KEY,\r\n  },\r\n});\r\n","export const API_KEY = \"92ad31df-74e3-454d-a567-d87f93df2056\";\r\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\r\n\r\nexport const REQUEST_DOGS_PENDING = \"REQUEST_DOGS_PENDING\";\r\nexport const REQUEST_DOGS_SUCCESS = \"REQUEST_DOGS_SUCCESS\";\r\nexport const REQUEST_DOGS_FAILED = \"REQUEST_DOGS_FAILED\";\r\n","import dogs from \"./API/dogs\";\r\n\r\nimport {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_DOGS_PENDING,\r\n  REQUEST_DOGS_SUCCESS,\r\n  REQUEST_DOGS_FAILED,\r\n} from \"./constants\";\r\n\r\n//helper function to filter out results that dont have full data\r\nconst filterOriginalDogList = (dogList) => {\r\n  const filteredDogList = dogList.filter((dog) => {\r\n    if (dog.breeds[0]) {\r\n      if (dog.breeds[0].breed_group) {\r\n        return dog;\r\n      }\r\n    }\r\n    return null;\r\n  });\r\n  //set state with new list with all complete elements\r\n  return filteredDogList;\r\n};\r\n\r\n//ACTION CREATOR TO UPDATE THE STATE OF THE LIST OF DOGS\r\n//this only runs once\r\nexport const fetchDogs = (numberOfDogsToFetch) => async (dispatch) => {\r\n  dispatch({ type: REQUEST_DOGS_PENDING });\r\n\r\n  try {\r\n    //runs axios from /API/dogs.js\r\n    const response = await dogs.get(`/search?limit=${numberOfDogsToFetch}`);\r\n    //deconstruct data from response and set name to dogList\r\n    const { data: dogList } = response;\r\n    //some of the dogs in the API do not have breed or breed_group so we must remove them from the list\r\n    const filteredDogList = filterOriginalDogList(dogList);\r\n    dispatch({ type: REQUEST_DOGS_SUCCESS, payload: filteredDogList });\r\n  } catch (error) {\r\n    dispatch({ type: REQUEST_DOGS_FAILED, payload: error });\r\n  }\r\n};\r\n\r\n//ACTION CREATOR TO UPDATE THE CURRENT STATE OF THE SEARCH FIELD\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCHFIELD,\r\n  payload: text,\r\n});\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({ id, imgUrl, breed, group, temperament }) => {\r\n  // const { id, url: imgUrl } = dog;\r\n  // const { name: breed, breed_group: group, temperament } = dog.breeds[0];\r\n\r\n  return (\r\n    //there is a variable with the same name as each group that is added dynamically\r\n    <div className=\"card\" style={{ backgroundColor: `var(--${group})` }}>\r\n      <div className=\"avatar\">\r\n        <div className=\"content\">\r\n          <img src={imgUrl} alt={`Dog ${id}`} />\r\n          <div className=\"breed\">{breed}</div>\r\n          <div className=\"group\">{group}</div>\r\n          <div className=\"temperament\">{temperament}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ data: dogList }) => {\r\n  return (\r\n    <div className=\"dogs-container\">\r\n      {/* map over each dog in the dogList and render out a card */}\r\n      {dogList.map((dog) => {\r\n        return (\r\n          <Card\r\n            id={dog.id}\r\n            imgUrl={dog.url}\r\n            breed={dog.breeds[0].name}\r\n            group={dog.breeds[0].breed_group}\r\n            temperament={dog.breeds[0].temperament}\r\n            key={dog.id}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBox = ({ onSearchChange, placeholder }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={onSearchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"1px solid black\",\r\n        height: \"100vh\",\r\n        marginTop: \"30px\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","//boilerplate ErrorBoundary\r\nimport React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooopss. That is not good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchDogs, setSearchField } from \"../actions\";\r\n\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport \"./App.css\";\r\n\r\n//how many dog elements to fetch\r\n//some of these elements will be discarded because of lacking info\r\nconst numberOfDogsToFetch = 100;\r\n\r\nclass App extends Component {\r\n  //fetches dog list when app component mounts\r\n  componentDidMount() {\r\n    this.props.onRequestDogs();\r\n  }\r\n\r\n  //narrows down filter results to those in breed_group or name or temperament\r\n  filterSearch = () => {\r\n    const { dogList, searchField } = this.props;\r\n    return dogList.filter((dog) => {\r\n      return (\r\n        dog.breeds[0].breed_group\r\n          .toLowerCase()\r\n          .includes(searchField.toLowerCase()) ||\r\n        dog.breeds[0].name.toLowerCase().includes(searchField.toLowerCase()) ||\r\n        dog.breeds[0].temperament\r\n          .toLowerCase()\r\n          .includes(searchField.toLowerCase())\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { onSearchChange, isPending } = this.props;\r\n    // //this is so there is no return during innitilization\r\n    // if (!this.state.dogList) {\r\n    //   return null;\r\n    // }\r\n\r\n    //narrows down render to items searched by user\r\n    const filteredSearch = this.filterSearch();\r\n\r\n    return (\r\n      <>\r\n        <h1>Search the dog cards</h1>\r\n        <SearchBox\r\n          onSearchChange={onSearchChange}\r\n          placeholder=\"Search the Dogs\"\r\n        />\r\n        <Scroll>\r\n          {isPending ? (\r\n            <h1>Loading....</h1>\r\n          ) : (\r\n            <ErrorBoundary>\r\n              <CardList data={filteredSearch} />\r\n            </ErrorBoundary>\r\n          )}\r\n        </Scroll>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\r\n// the function returns an object then uses connect to change the data from redecers.\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (e) => dispatch(setSearchField(e.target.value)),\r\n    onRequestDogs: () => dispatch(fetchDogs(numberOfDogsToFetch)),\r\n  };\r\n};\r\n\r\n// parameter state comes from index.js provider store state(rootReducers)\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dogList: state.requestDogs.dogList,\r\n    isPending: state.requestDogs.isPending,\r\n    searchField: state.searchDogs.searchField,\r\n  };\r\n};\r\n\r\n// action done from mapDispatchToProps will channge state from mapStateToProps\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_DOGS_PENDING,\r\n  REQUEST_DOGS_SUCCESS,\r\n  REQUEST_DOGS_FAILED,\r\n} from \"./constants\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\",\r\n};\r\n\r\nexport const searchDogs = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCHFIELD:\r\n      return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateDogs = {\r\n  dogList: [],\r\n  isPending: true,\r\n};\r\n\r\nexport const requestDogs = (state = initialStateDogs, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_DOGS_PENDING:\r\n      return { ...state, isPending: true };\r\n    case REQUEST_DOGS_SUCCESS:\r\n      return { ...state, dogList: action.payload, isPending: false };\r\n    case REQUEST_DOGS_FAILED:\r\n      return { ...state, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./containers/App\";\r\nimport { requestDogs, searchDogs } from \"./reducers\";\r\n\r\nconst rootReducers = combineReducers({ requestDogs, searchDogs });\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}